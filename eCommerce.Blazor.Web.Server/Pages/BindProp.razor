@page "/bindProp"


<h1>BindProp Page</h1>

<div class="container">
    <br />
    <div class="card" style="width: 25rem;">
      <div class="card-body">
        <h5 class="card-title">Binded property</h5>
        <div style="display: flex;">
            <label>Product name: &nbsp;</label><p class="card-text" style="font-weight: 600; color: dodgerblue;">@Product.Name</p>
        </div>
        <div style="display: flex;">
            <label>Is active? &nbsp;</label><p class="card-text" style="font-weight: 600; color: dodgerblue;">@Product.IsActive</p>
        </div>
        <div style="display: flex;">
            <label>Price: &nbsp;</label><p class="card-text" style="font-weight: 600; color: dodgerblue;">@Product.Price</p>
        </div>
        <div style="display: flex;">
            <label>Property selected: &nbsp;</label><p class="card-text" style="font-weight: 600; color: dodgerblue;">@_selectedProp</p>
        </div>
        @if(!String.IsNullOrWhiteSpace( _selectedProp ))
        {
                <p>Property Value: @Product.ProductProperties.FirstOrDefault( p => p.Key == _selectedProp ).Value</p>
        }

        <br />
        <p>Update the value on input:</p>
        <div class="input-group mb-3">
          <label class="input-group-text" for="price-input-onchange">New price:</label>
          <input type="number" id="price-input-onchange" class="form-control" aria-label="Price input" aria-describedby="price-input-button-onchange" @bind-value=@Product.Price>

          <span class="d-inline-block" tabindex="0" data-bs-toggle="popover" data-bs-trigger="hover focus" data-bs-content="The value changes upon input, you can't save!">
              <button class="btn btn-success" id="price-input-button-onchange" type="button" data-bs-content="The value changes upon input, you cant save!" disabled>Save</button>
            </span>
        </div>

        <br />
        <br />
        <div style="display: flex;">
            <label>Price: &nbsp;</label><p class="card-text" style="font-weight: 600; color: dodgerblue;">@Product.Price</p>
        </div>
        <p>Update the value on save:</p>
        <div class="input-group mb-3">
          <label class="input-group-text" for="price-input-onsave">New price:</label>
          <input type="number" id="price-input-onsave" class="form-control" aria-label="Price input" aria-describedby="price-input-button-onsave" @bind-value=@_priceCache>
          <button class="btn btn-success" type="button" id="price-input-button-onsave" @onclick="OnSave">Save</button>
        </div>

        <br />
        <br />
        <small>Using virtual property:</small>
        <div style="display: flex;">
            <label>This product is: &nbsp;</label><p class="card-text" style="font-weight: 600; color: dodgerblue;">@Product.IsActiveDisplayHelper</p>
        </div>
        <small>Or using a ternary operator in razor:</small>
        <div style="display: flex;">
            <label>This product is: &nbsp;</label><p class="card-text" style="font-weight: 600; color: dodgerblue;">@(Product.IsActive?"Active":"Not Active")</p>
        </div>
        <p>Update the active state:</p>
        <div class="input-group mb-3">
            <div class="form-check">
              <input class="form-check-input" type="checkbox" id="isactivecheck" @bind-value=@Product.IsActive checked="@(Product.IsActive?"checked":null)" >
              <label class="form-check-label" for="isactivecheck">
                Is Active?
              </label>
            </div>
        </div>

        <br />
        <br />
        <p>Product properties:</p>
        <select class="form-select form-select-lg mb-3" aria-label=".form-select-lg example" @bind="_selectedProp">
            @foreach ( var prop in Product.ProductProperties )
            {
                    <option value="@prop.Key">@prop.Value</option>
            }
        </select>
      </div>
    </div>
    
</div>

@code {

}
